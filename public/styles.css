@import url('https://fonts.googleapis.com/css?family=Droid+Sans|Open+Sans:700');

body{
  overflow-x: hidden;
}

#panel1, #panel2{

}

#panelsHolder{
  height: 100%;
  position: relative;
  box-sizing: border-box;
  display: flex;
  transition: 0.5s all ease-out;
}

#panelsHolder.one{
  left: 0%;
  width: 145%;
}
#panelsHolder.two{
  left: -90%;
  width: 280%;
}
#panelsHolder.three{
  width: 145%;
  left: -45%;
}
#panelsHolder>div{
  flex: 1;
}


.panel{
  display: block;
  border: 1px solid lightgray;
  margin: 20px;
  padding: 10px;
  position: relative;
  max-height: 100%;
}

/*==================================================
 * Effect 6
 * ===============================================*/
.panel
{
    position:relative;
    -webkit-box-shadow:0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1);
       -moz-box-shadow:0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1);
            box-shadow:0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1);
}

[data-id="DELETED"]{
  display: none;
}

.notesContainer>.children:empty::after{
  content: '+';
  font-size: 32px;
  color: lightgray;
  position: relative;
  margin-left: 1em;
}

.notesContainer>.children:empty:hover::after{
  color: gray;
  cursor: pointer;
}
.title{
  font-size: 16px;
  font-family: "Open Sans";
  font-weight: 700;
  width: 100%;
  margin: auto;
  text-align: center;
  color: gray;
}
#saveIndicator{
  position: absolute;
  top: 0;
  left: 0;
}
#saveIndicator.show::after{
  content: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80"><circle r="5" cx="55" cy="40"></circle><circle r="5" cx="50.60660171779821" cy="50.60660171779821"></circle><circle r="5" cx="40" cy="55"></circle><circle r="5" cx="29.393398282201787" cy="50.60660171779821"></circle><circle r="5" cx="25" cy="40"></circle><circle r="5" cx="29.393398282201787" cy="29.393398282201787"></circle><circle r="5" cx="40" cy="25"></circle><circle r="5" cx="50.60660171779821" cy="29.393398282201787"></circle></svg>');
  -webkit-mask-image: linear-gradient(to bottom right, transparent 25%, black);
  mask-image: linear-gradient(to bottom right, transparent 25%, black);
  width: 4em;
  height: 4em;
  display: block;
  animation: spin 1.8s linear infinite;
}

@keyframes spin{
  from{
    transform: rotate(0deg);
  }
  to{
    transform: rotate(360deg);
  }
}
*{
  box-sizing: border-box;
}

/*OLD:
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-thumb {
    -webkit-border-radius: 10px;
    border-radius: 10px;
    background: gray;
    -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);
}
*/

::-webkit-scrollbar {
    width: 12px;
}

::-webkit-scrollbar-thumb {
    border-radius: 10px;
    box-shadow: inset 0 0 3px 3px #E5E5E5;
    border: solid 2px transparent;
}

body{
  font-family: 'Droid Sans';
  font-size: 13px;
  color: rgb(51, 51, 51);
  padding: 0px;
  margin: 0px;
  height: 100%;
}

input{
  font-family: Helvetica;
  font-size: 11px;
  color: rgb(51, 51, 51);
}

div, input{
  outline: none;
}
.panel .corner{
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 1em;
  height: 1em;
  background: linear-gradient(to bottom right, #f8f8f8, #f8f8f8 35%, rgba(0,0,0,0.05), white 50%, #f0f0f0);
  -webkit-box-shadow:0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1);
     -moz-box-shadow:0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1);
          box-shadow:0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  transform: skew(-3deg, -9deg);
  transition: all .1s ease-out;
}

.panel .corner:hover{
  width: 1.5em;
  height: 1.5em;
  transform: skew(-2deg, -7deg);
  transition: all .2s cubic-bezier(0.645, 0.045, 0.355, 1);
}

.panel>:nth-child(3){
  display: none;
}

.panel.flipped>:nth-child(2){
  display: none;
}
.panel.flipped>:nth-child(3){
  display: initial;
}
@keyframes highlight {
  0% {
    background: lightblue;
  }
  100% {
    background: none;
  }
}

.flashHighlight {
  animation: highlight 1s;
}
.isComplete>.topLine>.contentHolder>.content{
  text-decoration: line-through;
}
.isComplete{
  color: lightgray;
  //display: none;
}

.showCompleted .isComplete{
  display: initial;
}
.isParent.isCollapsed>.topLine .bullet::before{
  visibility: visible;
}
.isParent.isCollapsed>.topLine:hover .toggle::before{
  content: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path d="M 20 50 H 80 M 50 80 V 20" fill="transparent" stroke="darkgray" stroke-width="12" stroke-linecap="round"/></svg>');
  visibility: visible;
}

.isCollapsed>.children{
  display: none;
}
.dateBox{
  cursor: default;
  position: absolute;
  bottom: 0px;
  left: 0px;
  user-select: none;
  font-size: 13px;
  z-index: 1001;
}
.dateBox .shell{
  position: absolute;
  top: 1em;
  left: 0px;
  background-color: white;
  z-index: 1000;
  min-width: 215px;
  border: 1px solid black;
  border-radius: 3px;
  overflow: hidden;
}
.dateBox .monthYear{
  border-bottom: 1px solid black;
  width: 100%%;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
}
.dateBox .monthYear span{
  margin: 1px auto;
  cursor: pointer;
}
.dateBox .monthYear span:hover{
  font-weight: bold;
}
.dateBox .days, .dateBox .dates, .dateBox .row{
  overflow: hidden;
}
.dateBox .dates{
  padding: 1px;
}
.dateBox .days div, .dateBox .row div{
  display: inline-block;
  width: 30px;
  text-align: center;
  overflow: hidden;
  padding: 2px;
}
.dateBox .days {
  background-color: #E9E9E9;
}
.dateBox .otherMonth{
  color: gray;
}
.dateBox .dates .row div{
  cursor: pointer;
}
.dateBox .dates .row div:hover{
  background-color: #96DED1;
}
.dateBox .dates .row .today{
  border: 1px solid red;
  border-radius: 10px;
  padding: 1px;
}
.dateBox .dates .row .selected{
  font-weight: bold;
  border: 1px solid black;
  padding: 1px;
}

.dateBox .clickCover{
  position: fixed;
  top: -50vh;
  left: -50vw;
  width: 200vh;
  height: 200vw;
  background-color: red;
  z-index: 1000;
  opacity: 0;
}
.toggle{
  background-color: white;
  position: relative;
  width: 1em;
  height: 1em;
  margin-right: .4em;
  margin-left: .1em;
  cursor: pointer;
  visibility: hidden;
}
.isParent:not(.isCollapsed)>.topLine:hover .toggle::before{
  content: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path d="M 20 50 H 80" fill="transparent" stroke="darkgray" stroke-width="12" stroke-linecap="round"/></svg>');
  visibility: visible;
}
.toggle::before{
  display: block;
  position: absolute;
  height: 100%;
  width: 100%;
}
.priority{
  font-size: .8em;
  display: none;
}

.displayEffectivePriority .priority{
  display: inline-block;
}

.displayPriority [data-prop-priority].priority{
  display: inline-block;
}

.priority[data-prop-effective-priority]::before{
  content: "\00A0";
  display: inline-block;
  border-left: 3px solid;
}
.priority[data-prop-effective-priority="normal"]::before{
  border-left: none;
}
.priority[data-prop-priority="normal"][data-prop-effective-priority="normal"]::before{
  border-left: 3px solid;
  border-left-color: lightgreen;
}
.priority[data-prop-effective-priority="important"]::before{
  border-left-color: #ffbf00;
}
.priority[data-prop-effective-priority="critical"]::before{
  border-left-color: pink;
}

.priority[data-prop-priority]::before{
  content: attr(data-prop-effective-priority);
  border-bottom: 1px solid black;
  border-bottom-style: dotted;
  padding-left: .2em;
}

.priority[data-prop-priority] .clearPriority::after{
  content: "\2716";
  color: lightgray;
  cursor: pointer;
  padding-left: .2em;
}
.displayDueDates .dueDate[data-prop-due-date]:not([data-prop-effective-due-date=""]){
  display: inline-block;
}

.displayEffectiveDueDates .dueDate:not([data-prop-effective-due-date=""]){
  display: inline-block;
}

.dueDate{
  position: relative;
  display: none;
  user-select: none;
  cursor: pointer;
  font-size: .8em;
}
.dueDate::before{
  display: inline-block;
  content: '\231A\00A0' attr(data-prop-effective-due-date);
}
.dueDate[data-prop-due-date]::before{
  border-bottom: 1px solid black;
  border-bottom-style: dotted;
}
.dueDate[data-prop-due-date] .clearDate::after{
  content: "\2716";
  color: gray;
  color: lightgray;
  padding-left: .2em;
}

.contentHolder[data-prop-effective-due-date="due"]>.dueDate::before{
  color: red;
}
.dragDropHelperTop{
  display: block;
  background-color: rgba(255,0,0,0);
  float: left;
  position: absolute;
  top: -0.1em;
  width: calc(100% - 1.7em);
  margin-left: 1.7em;
  height: 1em;
  border-top: 3px solid transparent;
  z-index: 101;
}
.dragDropHelperTop.hover{
  border-top-color: lightblue;
}

.dragDropHelperBottom{
  display: block;
  background-color: rgba(0,255,0,0);
  float: left;
  position: absolute;
  bottom: 0;
  width: calc(100% - 1.7em);
  margin-left: 1.7em;
  height: 1em;
  border-bottom: 3px solid transparent;
  z-index: 103;
}
.dragDropHelperBottom.hover{
  border-bottom-color: lightblue;
}

.dragDropHelperCover{
  display: block;
  background-color: rgba(0,255,255,0);
  float: left;
  position: absolute;
  bottom: -1em;
  width: calc(100% - 1.7em);
  margin-left: 1.7em;
  height: 2em;
  border-bottom: 3px solid transparent;
  z-index: 102;
}

.dragDropHelperFirstChild{
  display: block;
  background-color: rgba(0,0,255,0);
  float: left;
  position: absolute;
  bottom: 0;
  width: calc(100% - 3.7em);
  margin-left: 3.7em;
  height: 1em;
  border-bottom: 3px solid transparent;
  z-index: 104;
}
.dragDropHelperFirstChild.hover{
  border-bottom-color: lightblue;
}

body:not(.dragging) .dragDropHelperTop, body:not(.dragging) .dragDropHelperBottom, body:not(.dragging) .dragDropHelperCover, body:not(.dragging) .dragDropHelperFirstChild{
  display: none;
}

.bullet.hover{
  background-color: lightblue;
}
.zoom>.topLine>.left{
  display: none;
}
.zoom>.topLine>.contentHolder>.content{
  font-size: 24px;
  font-weight: bold;
}
.zoom.note>.children{
  border-left: none;
  margin-left: -1em;
  padding-left: 0;
}

.zooming .note:not(.zoom){
  visibility: hidden;
  position: absolute;
  width: 100%;
  top:0;
  left:0;
}
.zooming .note:not(.zoom)>.topLine{
  pointer-events: none;
}
.zooming .note:not(.zoom)>.topLine{
  opacity: 0;
}
.zoom{
  position: absolute;
  top: 1.5em;
  left:0;
  visibility: visible;
}
.notesContainer>.children>.zoom{
  top: .3em;
  left: 1.5em;
}
.zoom>.topLine{
  pointer-events: all;
  margin-top: .5em;
  margin-bottom: .5em;
}
.zooming .zoom .note{
  visibility: visible;
  position: initial;
}
.zooming .zoom .note>.topLine{
  pointer-events: all;
}
.zooming .zoom .note>.topLine{
  opacity: 1;
}
.breadcrumbs{
  display: none;
}
.zooming .breadcrumbs{
  display: block;
  margin-left: 2em;
}
.breadcrumbs span{
  color: gray;
  cursor: pointer;
}
.breadcrumbs span::before{
  cursor: default;
  color: lightgray;
  content: "";
  padding-right: .5em;
  padding-left: .5em;
}
.breadcrumbs span:not(:first-child)::before{
  content: ">";
}
.note{
  display: block;
  position: relative;
}

.topLine{
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: top;
  padding-top: .3em;
  padding-bottom: .4em;
}

.note:first-child>.topLine{
  padding-top: .3em;
}
.note.isParent:not(.isCollapsed)>.topLine, .note:last-child>.topLine{
  padding-bottom: .3em;
}

.left{
  padding-top: 3px;
  padding-left: .1em;
  display: flex;
  align-items: center;
  height: 1em;
}

.bullet{
  display: block;
  position: relative;
  width: 1em;
  height: 1em;
  cursor: pointer;
  z-index: 500;
}
/**/
.bullet::before{
  display: block;
  position: absolute;
  top: -20%;
  left: -20%;
  width: 140%;
  height: 140%;
  content: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="50" fill="lightgray" /></svg>');
  visibility: hidden;
}

.bullet:hover::before{
  top: -20%;
  left: -20%;
  width: 140%;
  height: 140%;
  visibility: visible;
  position: absolute;
  content: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="50" fill="darkgray" /></svg>');
}

.note>.topLine .bullet::after, .note>.topLine .bullet:hover::after{
  position: relative;
  top: -20%;
  left: -20%;
  height: 140%;
  width: 140%;
  content: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="20" fill="gray" /></svg>');
  display: block;
}
.isTodo>.topLine .bullet::after{
  content: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><rect x="25" y="25" width="50" height="50" rx="10" ry="10" stroke="black" fill="white" stroke-width = "2" /></svg>');
}
.isTodo.isComplete>.topLine .bullet::after{
  content: url('data:image/svg+xml;charset=UTF-8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><rect x="25" y="25" width="50" height="50" rx="10" ry="10" stroke="black" stroke-width = "2" fill="none" /><path d="m 35 50 l 15 15 l 20 -40" stroke="darkgray" stroke-width = "12" stroke-linecap="round" fill = "none" /></svg>');
}

.contentHolder{
  margin-left: .4em;
  max-width: 95%;
}

.content{
  outline: 0px solid transparent;
  display: inline;
  overflow-wrap: break-word;
  padding-left: 1px;
}

.note>.children{
  margin-left: 2em;
  border-left: 1px solid #E9E9E9;
  padding-left: .2em;
}
.filterComponent{
  min-height: 1em;
  max-height: 1em;
  opacity: 0;
  transition: all 0.5s;
  font-size: .8em;
  font-weight: bold;
  display: flex;
  margin-left: 2em;
  margin-right: 2em;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
}

.filterComponent:hover{
  max-height: 100vh;
  opacity: 1;
  margin-bottom: .5em;
}

.filterComponent>div{
  text-align: center;
  margin-right: .5em;
  margin-left: .5em;
  background-color: #f9f9f9;
  padding: 2px;
  border-radius: 2px;
}
.holdingPen{
  display: none;
}

.notesContainer{
  height: calc(100% - 70px);
  max-height: calc(100% - 70px);
  overflow-x: auto;
  overflow-y: scroll;
}
[data-top-level-id="INBOX"] .notesContainer{
  height: calc(100% - 100px);
  max-height: calc(100% - 100px);
}

#search{
  padding: 8px;
  width: 15%;
}

#searchBoxHolder{
  display: inline-block;
  border: 1px solid lightgray;
  border-radius: 20px;
  padding: 3px;
  padding-left: 6px;
  padding-right: 6px;
  width: 100%;
}

#searchBoxHolder input{
  border: none;
  width: 100%;
}

#searchBoxHolder input::placeholder{
  font: 900 1em 'Font Awesome 5 Free';
  color: lightgray;
  text-align: right;
}

#breadcrumbs{
  display: none;
}
body.zooming #breadcrumbs{
  display: inline-block;
}
#breadcrumbs span{
  color: gray;
  cursor: pointer;
}
#breadcrumbs span::before{
  cursor: default;
  color: lightgray;
  content: ">";
  padding-left: 1em;
  padding-right: 1em;
}
